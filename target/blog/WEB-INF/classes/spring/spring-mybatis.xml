<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

    <!-- Construct Atomikos UserTransactionManager, needed to configure Spring -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
        <!--  when close is called, should we force transactions to terminate or not? -->
        <property name="forceShutdown" value="false"/>
    </bean>

    <!-- Also use Atomikos UserTransactionImp, needed to configure Spring  -->
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>


    <!-- Configure the Spring framework to use JTA transactions from Atomikos -->
    <bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
        <property name="allowCustomIsolationLevels" value="true" />
    </bean>

    <bean id="sqlSessionFactorySCJ" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:com/seemoonup/dao/mapper/config/*Mapper.xml" />
    </bean>

    <!--<bean id="sqlSessionFactoryMall" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSourceMall" />-->
        <!--<property name="mapperLocations" value="classpath*:com/seemoonup/mall/dao/mapper/config/*Mapper.xml" />-->
    <!--</bean>-->

    <tx:annotation-driven transaction-manager="springTransactionManager"/>

    <!-- Mapper 数据源切换Aspect -->
    <bean id="mapperAspectBean" class="com.seemoonup.common.aspect.MapperAspect" />
	<aop:config>
        <aop:aspect id="mapperAspect" ref="mapperAspectBean">
	        <aop:pointcut id="datasourceRoute" expression="execution(* com.seemoonup.dao.mapper.*.*(..))"/>
	        <aop:before pointcut-ref="datasourceRoute" method="before"/>
            <aop:after pointcut-ref="datasourceRoute" method="after"/>
        </aop:aspect>
	</aop:config>
                     
</beans>